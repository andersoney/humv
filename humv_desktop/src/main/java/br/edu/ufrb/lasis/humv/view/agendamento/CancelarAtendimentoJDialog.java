/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ufrb.lasis.humv.view.agendamento;

import br.edu.ufrb.lasis.humv.HUMVApp;
import br.edu.ufrb.lasis.humv.entity.Atendimento;
import br.edu.ufrb.lasis.humv.entity.Usuario;
import br.edu.ufrb.lasis.humv.rest.RESTConnectionException;
import br.edu.ufrb.lasis.humv.rest.RESTMethods;
import br.edu.ufrb.lasis.humv.utils.HUMVConfigUtils;
import br.edu.ufrb.lasis.humv.utils.InterfaceGraficaUtils;
import com.sun.jersey.api.client.ClientResponse;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author tassiovale
 */
public class CancelarAtendimentoJDialog extends javax.swing.JDialog implements ActionListener {

    private Atendimento atendimento = null;
    private Usuario medico;
    private Date data;
    private AgendaJPanel agendaJPanel;

    /**
     * Creates new form CancelarAtendimentoJDialog
     */
    public CancelarAtendimentoJDialog(Atendimento atendimento, AgendaJPanel agendaJPanel) {
        super(HUMVApp.getMainWindow(), true);
        this.atendimento = atendimento;
        this.agendaJPanel = agendaJPanel;
        initComponents();
        customInitComponents();
    }

    public CancelarAtendimentoJDialog(Usuario medico, Date data, AgendaJPanel agendaJPanel) {
        super(HUMVApp.getMainWindow(), true);
        this.medico = medico;
        this.data = data;
        this.agendaJPanel = agendaJPanel;
        initComponents();
        customInitComponents();
    }

    private void customInitComponents() {
        buttonGroupMotivos.add(jRadioButtonMedico);
        buttonGroupMotivos.add(jRadioButtonDono);
        buttonGroupMotivos.add(jRadioButtonOutro);

        jRadioButtonMedico.setSelected(true);

        jRadioButtonMedico.addActionListener(this);
        jRadioButtonDono.addActionListener(this);
        jRadioButtonOutro.addActionListener(this);

        jTextFieldMotivo.setEnabled(false);

        setResizable(false);
        int height = (int) Toolkit.getDefaultToolkit().getScreenSize().getHeight();
        int width = (int) Toolkit.getDefaultToolkit().getScreenSize().getWidth();
        setLocation((width - getWidth()) / 2, (height - getHeight()) / 2);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (jRadioButtonOutro.isSelected()) {
            jTextFieldMotivo.setEnabled(true);
        } else {
            jTextFieldMotivo.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupMotivos = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jRadioButtonMedico = new javax.swing.JRadioButton();
        jRadioButtonDono = new javax.swing.JRadioButton();
        jRadioButtonOutro = new javax.swing.JRadioButton();
        jTextFieldMotivo = new javax.swing.JTextField();
        jButtonRemover = new javax.swing.JButton();
        jButtonVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Escolha abaixo o motivo do cancelamento e o conjunto de atendimentos a cancelar:");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jRadioButtonMedico.setText("O médico não compareceu");

        jRadioButtonDono.setText("O dono não compareceu no horário agendado");

        jRadioButtonOutro.setText("Outro:");

        jButtonRemover.setIcon(new javax.swing.ImageIcon("imagens/small_salvar.png"));
        jButtonRemover.setText("Confirmar");
        jButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverActionPerformed(evt);
            }
        });

        jButtonVoltar.setIcon(new javax.swing.ImageIcon("imagens/small_voltar.png"));
        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonOutro)
                    .addComponent(jRadioButtonDono)
                    .addComponent(jRadioButtonMedico)
                    .addComponent(jTextFieldMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonMedico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonDono)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonOutro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRemover)
                    .addComponent(jButtonVoltar))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverActionPerformed
        String resourceURL = "/api/atendimento/";
        String mensagemSucesso = null;
        if (medico != null) {
            resourceURL = resourceURL + medico.getEmail();
        } else {
            resourceURL = resourceURL + atendimento.getMedico().getEmail();
        }

        String textoMotivo = null;
        if (jRadioButtonMedico.isSelected()) {
            textoMotivo = jRadioButtonMedico.getText();
        } else if (jRadioButtonDono.isSelected()) {
            textoMotivo = jRadioButtonDono.getText();
        } else {
            textoMotivo = jTextFieldMotivo.getText();
        }

        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy-");
        if (atendimento != null) {
            String dataStr = dateFormat.format(atendimento.getHorarioMarcado());
            String horaStr = new SimpleDateFormat("HH").format(atendimento.getHorarioMarcado());
            resourceURL += "?dataInicio=" + dataStr + horaStr + "-00" + "&dataFim=" + dataStr + horaStr + "-00";
            mensagemSucesso = "atendimento";
        } else {
            String[] options = new String[]{"Cancelar turno vespertino", "Cancelar turno matutino", "Cancelar dia inteiro", "Voltar"};
            int opcao = JOptionPane.showOptionDialog(HUMVApp.getMainWindow(), "Escolha abaixo o conjunto de atendimentos que deseja cancelar:",
                    "Cancelar atendimento", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[3]);

            String dataStr = dateFormat.format(data);

            String inicio, termino;
            switch (opcao) {
                case 2:
                    inicio = "00-00";
                    termino = HUMVConfigUtils.getAtendimentoTerminoVespertino();
                    break;
                case 1:
                    inicio = HUMVConfigUtils.getAtendimentoInicioMatutino();
                    termino = HUMVConfigUtils.getAtendimentoTerminoMatutino();
                    break;
                case 0:
                    inicio = HUMVConfigUtils.getAtendimentoInicioVespertino();
                    termino = HUMVConfigUtils.getAtendimentoTerminoVespertino();
                    break;
                default:
                    return;
            }
            resourceURL += "?dataInicio=" + dataStr + inicio + "-00" + "&dataFim=" + dataStr + termino + "-00";
            mensagemSucesso = "conjunto de atendimentos";
        }

        try {
            ClientResponse response = RESTMethods.put(resourceURL, textoMotivo);
            String resposta = response.getEntity(String.class);
            if (!resposta.equalsIgnoreCase("ok")) {
                InterfaceGraficaUtils.erroResposta(resposta);
            } else {
                InterfaceGraficaUtils.sucessoAtualizacao(mensagemSucesso);
                agendaJPanel.construirHorarios();
                dispose();
            }
        } catch (RESTConnectionException ex) {
            InterfaceGraficaUtils.erroConexao();
        }
    }//GEN-LAST:event_jButtonRemoverActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupMotivos;
    private javax.swing.JButton jButtonRemover;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButtonDono;
    private javax.swing.JRadioButton jRadioButtonMedico;
    private javax.swing.JRadioButton jRadioButtonOutro;
    private javax.swing.JTextField jTextFieldMotivo;
    // End of variables declaration//GEN-END:variables

}
