/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ufrb.lasis.humv.view.main;

import br.edu.ufrb.lasis.humv.HUMVApp;
import br.edu.ufrb.lasis.humv.rest.RESTMethods;
import br.edu.ufrb.lasis.humv.utils.SecurityUtils;
import com.sun.jersey.api.client.ClientResponse;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author tassiovale
 */
public class LoginJDialog extends javax.swing.JDialog implements ActionListener, KeyListener {

    private final static Logger logger = LoggerFactory.getLogger(LoginJDialog.class);

    private JFrame window;

    /**
     * Creates new form LoginDialog
     *
     * @param window
     */
    public LoginJDialog(JFrame window) {
        super(window, false);
        this.window = window;
        initComponents();
        customInitComponents();
    }

    private void customInitComponents() {
        int height = (int) Toolkit.getDefaultToolkit().getScreenSize().getHeight();
        int width = (int) Toolkit.getDefaultToolkit().getScreenSize().getWidth();
        setLocation((width - getWidth()) / 2, (height - getHeight()) / 2);

        textFieldUsername.addKeyListener(this);
        passwordField.addKeyListener(this);
        buttonEntrar.addActionListener(this);
        buttonEntrar.addKeyListener(this);

        textFieldUsername.setFocusable(true);
    }

    private void login() {

        try {
            String username = textFieldUsername.getText();
            String senha = new String(passwordField.getPassword());

            if (!username.equals("humv")) {
                try {
                    senha = SecurityUtils.criptography(senha);
                } catch (Exception ex) {
                }
            }

            ClientResponse response = RESTMethods.userLogin("/login", username, senha);

            String resposta = response.getEntity(String.class);

            if (resposta.contains("OK") /*|| textFieldUsername.getText().equals("1")*/) {
                this.dispose();
                String perfil = resposta.split("-")[1];
                MainSplitPanel splitPanel = new MainSplitPanel(Integer.parseInt(perfil));
                window.setContentPane(splitPanel);
                HUMVApp.setNomeUsuario(username);
                HUMVApp.setPainelCentralComLogo();
                String mensagem = "Login realizado com sucesso.";
                log.info("[" + HUMVApp.getNomeUsuario() + "] " + "mensagem: " + mensagem);
            } else {
                JOptionPane.showMessageDialog(this, resposta, "Falha na autenticação", JOptionPane.ERROR_MESSAGE);
                if (resposta.toLowerCase().contains("senha")) {
                    passwordField.setText("");
                    passwordField.setFocusable(true);
                } else {
                    textFieldUsername.setText("");
                    textFieldUsername.setFocusable(true);
                }
            }
        } catch (Exception ex) {
            String mensagem = "Erro ao conectar-se com banco de dados. Por favor, tente novamente mais tarde.";
            JOptionPane.showMessageDialog(this, mensagem, "Falha na autenticação", JOptionPane.ERROR_MESSAGE);
            logger.error("mensagem: " + mensagem, ex);
        }

    }

    @Override
    public void actionPerformed(ActionEvent e) {
        login();
    }

    @Override
    public void keyPressed(KeyEvent e) {
        if (e.getKeyCode() == KeyEvent.VK_ENTER) {
            login();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        buttonEntrar = new javax.swing.JButton();
        textFieldUsername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Acesso ao sistema");
        setAlwaysOnTop(true);
        setResizable(false);

        jLabel2.setText("E-mail ou SIAPE:");

        jLabel3.setText("Senha:");

        buttonEntrar.setText("Entrar");

        jLabel4.setText("Esqueceu a senha? Clique aqui.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonEntrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldUsername)
                            .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonEntrar)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEntrar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField textFieldUsername;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
    }

}
