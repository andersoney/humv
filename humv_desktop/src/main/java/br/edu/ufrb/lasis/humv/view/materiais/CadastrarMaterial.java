/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ufrb.lasis.humv.view.materiais;

import br.edu.ufrb.lasis.humv.HUMVApp;
import br.edu.ufrb.lasis.humv.entity.Material;
import br.edu.ufrb.lasis.humv.rest.RESTConnectionException;
import br.edu.ufrb.lasis.humv.rest.RESTMethods;
import br.edu.ufrb.lasis.humv.utils.InterfaceGraficaUtils;
import br.edu.ufrb.lasis.humv.utils.ValidationsUtils;
import br.edu.ufrb.lasis.humv.view.atendimentosocial.CadastrarAtendimentoSocialJPanel;
import com.sun.jersey.api.client.ClientResponse;
import java.math.BigInteger;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author Andersoney
 */
public class CadastrarMaterial extends javax.swing.JPanel {
    
    private final static Logger logger = LoggerFactory.getLogger(CadastrarAtendimentoSocialJPanel.class);
    private boolean novo = true;
    private Material materialSlecionado ;
//criar um objeto material selecionado
    /**
     * Creates new form MateriaisCadastro
     */
    public CadastrarMaterial() {
        initComponents();
    }

    
    // Alterar o construtor para receber o material selecionado
    //criar um custom init components
    public CadastrarMaterial(Material material) {  
        this.materialSlecionado = material ;
        initComponents();
        customInitComponents();
        
    }

    private void customInitComponents(){
      this.jComboBox1.setSelectedIndex(materialSlecionado.getTipo());
        this.descriminacaoJTF.setText(materialSlecionado.getDiscriminacao());
        this.jFormattedTextFieldValor.setText("" + materialSlecionado.getValor());
        this.unidadeJTF.setText(materialSlecionado.getUnidade());
        this.jLabelCodigo.setText(""+materialSlecionado.getId());
        novo=false;  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        descricaoJL = new javax.swing.JLabel();
        descriminacaoJTF = new javax.swing.JTextField();
        unidadeJL = new javax.swing.JLabel();
        unidadeJTF = new javax.swing.JTextField();
        tipoJL = new javax.swing.JLabel();
        valorJL = new javax.swing.JLabel();
        salvarJB = new javax.swing.JButton();
        cancelarJB = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabelCodigo = new javax.swing.JLabel();
        jSpinnerQuantidade = new javax.swing.JSpinner();
        jFormattedTextFieldValor = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        descricaoJL.setText("Descriminação:");

        unidadeJL.setText("Medida (Ex.: Rolo, und. ) :");

        tipoJL.setText("Categoria:");

        valorJL.setText("Quantidade:");

        salvarJB.setText("Salvar");
        salvarJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarJBActionPerformed(evt);
            }
        });

        cancelarJB.setText("Cancelar");
        cancelarJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarJBActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Medicamento", "Material EPI" }));

        jSpinnerQuantidade.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel1.setText("Valor R$:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("CADASTRO DE MATERIAL");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabelCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(cancelarJB)
                        .addGap(50, 50, 50)
                        .addComponent(salvarJB)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tipoJL)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jFormattedTextFieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(valorJL)
                                        .addGap(18, 18, 18)
                                        .addComponent(jSpinnerQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(descricaoJL)
                                .addGap(18, 18, 18)
                                .addComponent(descriminacaoJTF))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(unidadeJL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(unidadeJTF)))
                        .addGap(24, 24, 24))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(226, 226, 226))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descricaoJL)
                    .addComponent(descriminacaoJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unidadeJL)
                    .addComponent(unidadeJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoJL)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valorJL)
                    .addComponent(jSpinnerQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(salvarJB)
                            .addComponent(cancelarJB))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabelCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarJBActionPerformed
        // TODO add your handling code here:
        boolean sair = InterfaceGraficaUtils.dialogoCancelar("o cadastro", "Materiais");
        if (sair) {
            this.setVisible(false);
            System.gc();
            HUMVApp.exibirMensagemCarregamento();
            HUMVApp.setPainelCentralComLogo();
            HUMVApp.esconderMensagemCarregamento();
        }
    }//GEN-LAST:event_cancelarJBActionPerformed

    private void salvarJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarJBActionPerformed
        
        String descricao, unidade, valorST;
        Integer tipo;
        BigInteger id ;
        double valor;
        descricao = this.descriminacaoJTF.getText();
        tipo = this.jComboBox1.getSelectedIndex();
        valorST = this.jFormattedTextFieldValor.getText();
        valor = ValidationsUtils.converteStringParaPreco(valorST);
        unidade = this.unidadeJTF.getText();
        Material material = new Material();
        if (descricao.trim().isEmpty()) {
            InterfaceGraficaUtils.dialogoMensagem("Descrição nula.", "Campo descrição não pode ser nulo.");
            return;
        }
        if (unidade.trim().isEmpty()) {
            InterfaceGraficaUtils.dialogoMensagem("Unidade nula.", "Campo Unidade não pode ser nulo.");
            return;
        }
        try {
            valor = Float.parseFloat(valorST);
        } catch (Exception e) {
            InterfaceGraficaUtils.dialogoMensagem("Valor não é real", "O valor do medicamento precisa ser em real.");
            return;
        }
        material.setDiscriminacao(descricao);
        material.setTipo(tipo);
        material.setUnidade(unidade);
        material.setValor(valor);
        material.setQuantidadeDisponivel(Integer.parseInt(jSpinnerQuantidade.getValue().toString()));
        try {
            ClientResponse response;
            if (novo) {
                response = RESTMethods.post("/api/material", material);
            } else {
            
             material.setId(materialSlecionado.getId());
                response = RESTMethods.put("/api/material", material);
            }
            
            String resposta = response.getEntity(String.class);
            if (!resposta.equalsIgnoreCase("ok")) {
                InterfaceGraficaUtils.erroResposta(resposta);
            } else {
                if (novo) {
                    InterfaceGraficaUtils.sucessoCadastro("Material");
                } else {
                    InterfaceGraficaUtils.sucessoAtualizacao("Material");
                }
                HUMVApp.exibirMensagemCarregamento();
                HUMVApp.setPainelCentralComLogo();
                HUMVApp.esconderMensagemCarregamento();
            }
        } catch (RESTConnectionException ex) {
            InterfaceGraficaUtils.erroConexao();
            logger.error("mensagem: " + ex.getMessage(), ex);
        }

    }//GEN-LAST:event_salvarJBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelarJB;
    private javax.swing.JLabel descricaoJL;
    private javax.swing.JTextField descriminacaoJTF;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFormattedTextField jFormattedTextFieldValor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JSpinner jSpinnerQuantidade;
    private javax.swing.JButton salvarJB;
    private javax.swing.JLabel tipoJL;
    private javax.swing.JLabel unidadeJL;
    private javax.swing.JTextField unidadeJTF;
    private javax.swing.JLabel valorJL;
    // End of variables declaration//GEN-END:variables

  
}
